from settings import *
import pygame

_ = False
matrix_map = [
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, _, _, _, _, _, 1, _, _, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [1, 1, 1, 1, 1, _, 1, _, 1, _, 1, _, 1, _, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1],
    [1, _, _, _, 1, _, 1, _, 1, _, _, _, 1, _, _, _, _, _, 1, _, 1, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, 1, _, 1],
    [1, _, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1, _, 1, _, 1],
    [1, _, 1, _, 1, _, 1, _, 1, _, _, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, _, _, _, _, _, _, 1, _, _, _, _, _, _, _, 1, _, _, _, _, 1, _, 1, _, _, _, 1],
    [1, _, 1, _, 1, _, 1, _, 1, 1, 1, _, 1, _, 1, 1, 1, _, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1],
    [1, _, 1, _, _, _, 1, _, _, _, 1, _, _, _, 1, _, _, _, _, _, 1, _, _, _, _, _, _, _, 1, _, 1, _, 1, _, _, _, _, _, _, _, _, _, _, 1, _, 1, _, _, _, 1],
    [1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, _, 1],
    [1, _, 1, _, _, _, _, _, _, _, _, _, _, _, 1, _, 1, _, 1, _, _, _, _, _, _, _, 1, _, _, _, 1, _, 1, _, 1, _, _, _, _, _, _, _, _, 1, _, _, _, 1, _, 1],
    [1, _, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1],
    [1, _, 1, _, 1, _, _, _, _, _, _, _, 1, _, 1, _, 1, _, 1, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, _, _, _, _, _, _, _, 1, _, 1],
    [1, _, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, _, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, _, 1, 1, _, 1],
    [1, _, 1, _, 1, _, _, _, 1, _, _, _, 1, _, 1, _, 1, _, _, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, _, _, 1, _, _, _, _, 1],
    [1, _, 1, _, 1, _, 1, _, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, 1, _, 1],
    [1, _, 1, _, _, _, 1, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, 1, _, _, _, _, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, 1, _, 1, _, _, 1],
    [1, _, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, 1],
    [1, _, 1, _, _, _, 1, _, 1, _, _, _, _, _, _, _, 1, _, 1, _, 1, _, _, _, _, _, 1, _, _, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, 1],
    [1, _, 1, _, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, _, 1, 1, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, 1, _, 1],
    [1, _, 1, _, 1, _, _, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, _, _, 1, _, _, _, 1, _, _, _, _, _, _, _, 1, _, 1, _, _, _, 1, _, _, _, 1, _, _, _, _, 1],
    [1, _, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, _, 1, _, 1, 1, 1, 1, 1, _, 1, _, 1, _, 1, 1, 1, 1, 1, _, 1, 1, 1, 1],
    [1, _, 1, _, 1, _, _, _, _, _, 1, _, _, _, 1, _, 1, _, _, _, _, _, 1, _, _, _, _, _, 1, _, _, _, _, _, 1, _, 1, _, 1, _, 1, _, _, _, 1, _, _, _, _, 1],
    [1, _, 1, _, 1, _, 1, 1, 1, 1, 1, _, 1, _, 1, 1, 1, _, _, _, _, _, 1, 1, 1, 1, 1, 1, 1, _, 1, 1, 1, _, 1, _, 1, _, 1, _, 1, _, 1, _, 1, 1, 1, _, _, 1],
    [1, _, _, _, 1, _, _, _, _, _, _, _, 1, _, 1, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, 1, _, 1, _, _, _, 1, _, _, _, 1, _, _, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
]

WORLD_WIDTH = len(matrix_map[0]) * TILE
WORLD_HEIGHT = len(matrix_map) * TILE
world_map = {}
collision_walls = []
for j, row in enumerate(matrix_map):
    for i, char in enumerate(row):
        if char:
            collision_walls.append(pygame.Rect(i * TILE, j * TILE, TILE, TILE))
            if char == 1:
                world_map[(i * TILE, j * TILE)] = 1
            if char == 2:
                world_map[(i * TILE, j * TILE)] = 2