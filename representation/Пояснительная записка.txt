main.py:
Импортируются необходимые библиотеки, такие как time, pygame, а также модули, содержащие настройки, классы игрока, объекты спрайтов, логику луча, рисование и меню.
Инициализируется Pygame, создается окно, настраиваются видимость мыши и шрифты.
Создаются объекты игрока, спрайты, часы для управления временем, объекты для рисования и меню.
Основной цикл игры, в котором обрабатываются события, вызываются методы для управления движением игрока, проверяется завершение игры, обновляется изображение на экране, рисуются фоны, стены, объекты и отображается FPS.

settings.py:
Файл, содержащий глобальные настройки игры, такие как размер окна, цвета, частота кадров в секунду (FPS) и другие константы.

player.py:
Класс Player, описывающий поведение и характеристики игрового персонажа.

sprite_objects.py:
Модуль с классами, представляющими объекты-спрайты, такие как стены и другие.
Класс Sprites содержит параметры и объекты для различных спрайтов в игре.
Класс SpriteObject описывает параметры и положение конкретного спрайта.
Метод object_locate определяет положение и отображение спрайта относительно игрока и лучей, используя тригонометрию и параметры спрайта.

ray_casting.py:
Модуль, реализующий логику луча для отображения трехмерного мира в двухмерной проекции. Используется для определения видимости стен и других объектов.

drawing.py:
Модуль, отвечающий за отрисовку различных элементов игры, таких как фоны, стены, объекты и отображение FPS.
Инициализирует текстуры для стен и заднего фона.
Метод background рисует задний фон и небо.
Метод world отрисовывает объекты игрового мира.
Метод fps отображает количество кадров в секунду.

menu.py:
Модуль, содержащий класс MainMenu для отображения и обработки главного меню игры

final.py:
Модуль, содержащий функцию check_final_position, которая, вероятно, проверяет завершение игры в соответствии с положением игрока.

map.py:
Создает карту игрового мира с использованием матрицы matrix_map, где 1 представляет стены, а 0 отсутствие стены.
Определяет глобальные переменные WORLD_WIDTH и WORLD_HEIGHT на основе размеров матрицы.
Создает словарь world_map, где ключ - координаты точки, значение - тип объекта (1 или 2).
Создает список collision_walls с объектами pygame.Rect для коллизий.
